/*** @author admin*/(function(){    var    __Course 				= model.Course = {},    __events				= __Course.events	= new __myNameSpace.Model.User.Events(),    ROLES					= __myNameSpace.ROLES,    directoryROLES			= __myNameSpace.DirectoryROLES;	__Course.nbr_teachers = {		onGet:function(){			return 0;			// return this.timeTables.distinctValues('teacher').length; // Throws this Exception : { name: "Error", message: "Attribute teacher does not have the right kind", messages: Array() , 1 more }		}	}	__Course.nbr_groups = {		onGet:function(){			return 0;			// return this.timeTables.distinctValues('studyGroup').length; // Throws this Exception : { name: "Error", message: "Attribute studyGroup does not have the right kind", messages: Array() , 1 more }		}	}	    __events.onRestrictingQuery = function(){    	var        sessionRef		= currentSession(),        curUser			= sessionRef.user,        sStorage		= sessionStorage,        theUser;		        switch(true){            case sessionRef.belongsTo(directoryROLES.RECORDOFFICER)	:                return this.all();            case sessionRef.belongsTo(directoryROLES.TEACHER)		:                var                theUser	= ds.Teacher(sStorage.ID);				                return theUser.courses;            case sessionRef.belongsTo(directoryROLES.STUDENT)		:                var                theUser	= ds.Student(sStorage.ID);                                if(theUser.studyGroup){                	return theUser.studyGroup.courses;                }                else{                	return this.createEntityCollection();                }            case sessionRef.belongsTo(directoryROLES.PARENT)		:                var                theUser	= ds.parent(sStorage.ID);				                return theUser.getCourses();        }		        return this.createEntityCollection();    };	    __events.onSave = function(){        ds.Log.push(__myNameSpace.LOG.getOperation(this , 'save'));    }	    __events.onRemove = function(){        ds.Log.push(__myNameSpace.LOG.getOperation(this , 'remove'));    }})();