/*** @author admin*/(function(){	var	__StudyGroup	= model.StudyGroup 				= {},	__events		= __StudyGroup.events 			= {},	__entityMethods	= __StudyGroup.entityMethods	= {},	ERRORS			= __myNameSpace.ERRORS;		__entityMethods.isBusy = function(timeTable){		return ds.Utils.isBusy({			timeTable	: timeTable,			timeTables	: this.timeTables		});	}	__StudyGroup.nbr_teachers = {		onGet:function(){			return 0;			// return this.timeTables.distinctValues('teacher').length; // Throws this exception: { name: "Error", message: "Attribute teacher does not have the right kind", messages: Array() }		}	}	__StudyGroup.nbr_students = {		onGet:function(){			return this.students.length;		}	}		__events.onRestrictingQuery = function(){		var		sessionRef		= currentSession(),		curUser			= sessionRef.user,		ROLES			= __myNameSpace.ROLES,		DirectoryROLES	= __myNameSpace.DirectoryROLES,		sStorage		= sessionStorage,		result			= this.createEntityCollection();				if(ds.Utils.classToType(sStorage.role) == 'array'){			switch(true){				case sStorage.role.lastIndexOf(DirectoryROLES.SUPERADMINISTRATOR) >= 0	:				case sStorage.role.lastIndexOf(DirectoryROLES.ADMINISTRATOR) >= 0		:				case sStorage.role.lastIndexOf(DirectoryROLES.RECORDOFFICER) >= 0		:					return this.all();			}		}				switch(sStorage.role){			case ROLES.SUPERADMINISTRATOR	:			case ROLES.ADMINISTRATOR		:			case ROLES.RECORDOFFICER		:				return this.all();			case ROLES.TEACHER				:				if(ds.Teacher.first()){					return ds.Teacher.first().timeTables.studyGroup;				}				break;			case ROLES.STUDENT				:				if(ds.Student.first()){					result.add(ds.Student.first().studyGroup);					return result;				}				break;			case ROLES.PARENT				:				if(ds.Parent.first() && ds.Parent.first().children){					return ds.Parent.first().children.studyGroup;				}				break;		}				return result;	}		__events.onSave = function(){		ds.Log.push(__myNameSpace.LOG.getOperation(this , 'save'));	}		__events.onRemove = function(){		ds.Log.push(__myNameSpace.LOG.getOperation(this , 'remove'));	}})();